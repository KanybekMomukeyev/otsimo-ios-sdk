/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: dashboard.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

fileprivate let _protobuf_package = "otsimo"

public enum Otsimo_ChartType: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
  public typealias RawValue = Int
  case line // = 0
  case bar // = 1
  case pie // = 2
  case scatter // = 3
  case buble // = 4
  case radar // = 5
  case geo // = 6
  case timeline // = 7
  case UNRECOGNIZED(Int)

  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "LINE"),
    1: .same(proto: "BAR"),
    2: .same(proto: "PIE"),
    3: .same(proto: "SCATTER"),
    4: .same(proto: "BUBLE"),
    5: .same(proto: "RADAR"),
    6: .same(proto: "GEO"),
    7: .same(proto: "TIMELINE"),
  ]

  public init() {
    self = .line
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .line
    case 1: self = .bar
    case 2: self = .pie
    case 3: self = .scatter
    case 4: self = .buble
    case 5: self = .radar
    case 6: self = .geo
    case 7: self = .timeline
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .line: return 0
    case .bar: return 1
    case .pie: return 2
    case .scatter: return 3
    case .buble: return 4
    case .radar: return 5
    case .geo: return 6
    case .timeline: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

public struct Otsimo_DashboardItems: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DashboardItems"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "profile_id"),
    2: .standard(proto: "child_id"),
    3: .standard(proto: "created_at"),
    8: .same(proto: "items"),
  ]

  ///  ProfileId
  public var profileId: String = ""

  ///  ChildId
  public var childId: String = ""

  ///  Created At
  public var createdAt: Int64 = 0

  public var items: [Otsimo_Card] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &profileId)
      case 2: try decoder.decodeSingularStringField(value: &childId)
      case 3: try decoder.decodeSingularInt64Field(value: &createdAt)
      case 8: try decoder.decodeRepeatedMessageField(value: &items)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !profileId.isEmpty {
      try visitor.visitSingularStringField(value: profileId, fieldNumber: 1)
    }
    if !childId.isEmpty {
      try visitor.visitSingularStringField(value: childId, fieldNumber: 2)
    }
    if createdAt != 0 {
      try visitor.visitSingularInt64Field(value: createdAt, fieldNumber: 3)
    }
    if !items.isEmpty {
      try visitor.visitRepeatedMessageField(value: items, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_DashboardItems) -> Bool {
    if profileId != other.profileId {return false}
    if childId != other.childId {return false}
    if createdAt != other.createdAt {return false}
    if items != other.items {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_DashboardGetRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DashboardGetRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "profile_id"),
    2: .standard(proto: "child_id"),
    3: .standard(proto: "app_version"),
    4: .same(proto: "language"),
    5: .standard(proto: "country_code"),
    6: .standard(proto: "last_time_data_fetched"),
  ]

  public var profileId: String = ""

  public var childId: String = ""

  public var appVersion: String = ""

  public var language: String = ""

  public var countryCode: String = ""

  public var lastTimeDataFetched: Int64 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &profileId)
      case 2: try decoder.decodeSingularStringField(value: &childId)
      case 3: try decoder.decodeSingularStringField(value: &appVersion)
      case 4: try decoder.decodeSingularStringField(value: &language)
      case 5: try decoder.decodeSingularStringField(value: &countryCode)
      case 6: try decoder.decodeSingularInt64Field(value: &lastTimeDataFetched)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !profileId.isEmpty {
      try visitor.visitSingularStringField(value: profileId, fieldNumber: 1)
    }
    if !childId.isEmpty {
      try visitor.visitSingularStringField(value: childId, fieldNumber: 2)
    }
    if !appVersion.isEmpty {
      try visitor.visitSingularStringField(value: appVersion, fieldNumber: 3)
    }
    if !language.isEmpty {
      try visitor.visitSingularStringField(value: language, fieldNumber: 4)
    }
    if !countryCode.isEmpty {
      try visitor.visitSingularStringField(value: countryCode, fieldNumber: 5)
    }
    if lastTimeDataFetched != 0 {
      try visitor.visitSingularInt64Field(value: lastTimeDataFetched, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_DashboardGetRequest) -> Bool {
    if profileId != other.profileId {return false}
    if childId != other.childId {return false}
    if appVersion != other.appVersion {return false}
    if language != other.language {return false}
    if countryCode != other.countryCode {return false}
    if lastTimeDataFetched != other.lastTimeDataFetched {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_CardDecoration: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CardDecoration"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "size"),
    2: .standard(proto: "background_style"),
    3: .standard(proto: "image_url"),
    4: .standard(proto: "left_icon"),
    5: .standard(proto: "right_icon"),
  ]

  public var size: Otsimo_CardDecoration.Size = Otsimo_CardDecoration.Size.small

  public var backgroundStyle: Otsimo_CardDecoration.BackgroundStyle = Otsimo_CardDecoration.BackgroundStyle.empty

  public var imageURL: String = ""

  public var leftIcon: String = ""

  public var rightIcon: String = ""

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Size: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    public typealias RawValue = Int

    ///  Small is 1x1 block on iphone
    case small // = 0

    ///  Medium is 2x1 block on iphone
    case medium // = 1

    ///  Large is 2x2 block on iphone
    case large // = 2
    case UNRECOGNIZED(Int)

    public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      0: .same(proto: "SMALL"),
      1: .same(proto: "MEDIUM"),
      2: .same(proto: "LARGE"),
    ]

    public init() {
      self = .small
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .small
      case 1: self = .medium
      case 2: self = .large
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .small: return 0
      case .medium: return 1
      case .large: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum BackgroundStyle: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    public typealias RawValue = Int
    case empty // = 0
    case image // = 1
    case chartSilhouette // = 2
    case UNRECOGNIZED(Int)

    public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      0: .same(proto: "EMPTY"),
      1: .same(proto: "IMAGE"),
      2: .same(proto: "CHART_SILHOUETTE"),
    ]

    public init() {
      self = .empty
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .empty
      case 1: self = .image
      case 2: self = .chartSilhouette
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .empty: return 0
      case .image: return 1
      case .chartSilhouette: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &size)
      case 2: try decoder.decodeSingularEnumField(value: &backgroundStyle)
      case 3: try decoder.decodeSingularStringField(value: &imageURL)
      case 4: try decoder.decodeSingularStringField(value: &leftIcon)
      case 5: try decoder.decodeSingularStringField(value: &rightIcon)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if size != Otsimo_CardDecoration.Size.small {
      try visitor.visitSingularEnumField(value: size, fieldNumber: 1)
    }
    if backgroundStyle != Otsimo_CardDecoration.BackgroundStyle.empty {
      try visitor.visitSingularEnumField(value: backgroundStyle, fieldNumber: 2)
    }
    if !imageURL.isEmpty {
      try visitor.visitSingularStringField(value: imageURL, fieldNumber: 3)
    }
    if !leftIcon.isEmpty {
      try visitor.visitSingularStringField(value: leftIcon, fieldNumber: 4)
    }
    if !rightIcon.isEmpty {
      try visitor.visitSingularStringField(value: rightIcon, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_CardDecoration) -> Bool {
    if size != other.size {return false}
    if backgroundStyle != other.backgroundStyle {return false}
    if imageURL != other.imageURL {return false}
    if leftIcon != other.leftIcon {return false}
    if rightIcon != other.rightIcon {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_CardEmpty: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CardEmpty"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_CardEmpty) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_CardWebpage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CardWebpage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "url"),
  ]

  public var url: String = ""

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &url)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !url.isEmpty {
      try visitor.visitSingularStringField(value: url, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_CardWebpage) -> Bool {
    if url != other.url {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_CardApplink: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CardApplink"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "applink"),
  ]

  public var applink: String = ""

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &applink)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !applink.isEmpty {
      try visitor.visitSingularStringField(value: applink, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_CardApplink) -> Bool {
    if applink != other.applink {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_CardAnalysis: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CardAnalysis"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "data"),
    2: .standard(proto: "chart_type"),
  ]

  private class _StorageClass {
    var _data: Apipb_DataSet? = nil
    var _chartType: Otsimo_ChartType = Otsimo_ChartType.line

    init() {}

    init(copying source: _StorageClass) {
      _data = source._data
      _chartType = source._chartType
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var data: Apipb_DataSet {
    get {return _storage._data ?? Apipb_DataSet()}
    set {_uniqueStorage()._data = newValue}
  }
  public var hasData: Bool {
    return _storage._data != nil
  }
  public mutating func clearData() {
    return _storage._data = nil
  }

  public var chartType: Otsimo_ChartType {
    get {return _storage._chartType}
    set {_uniqueStorage()._chartType = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._data)
        case 2: try decoder.decodeSingularEnumField(value: &_storage._chartType)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._data {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._chartType != Otsimo_ChartType.line {
        try visitor.visitSingularEnumField(value: _storage._chartType, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_CardAnalysis) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._data != other_storage._data {return false}
        if _storage._chartType != other_storage._chartType {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_Card: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Card"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "text"),
    3: .standard(proto: "expires_at"),
    4: .standard(proto: "created_at"),
    5: .same(proto: "decoration"),
    6: .standard(proto: "provider_score"),
    7: .standard(proto: "provider_weight"),
    8: .standard(proto: "provider_name"),
    9: .same(proto: "language"),
    10: .same(proto: "empty"),
    11: .same(proto: "webpage"),
    12: .same(proto: "applink"),
    13: .same(proto: "analysis"),
    14: .same(proto: "title"),
    15: .same(proto: "subtitle"),
    16: .same(proto: "labels"),
  ]

  private class _StorageClass {
    var _id: String = ""
    var _text: String = ""
    var _expiresAt: Int64 = 0
    var _createdAt: Int64 = 0
    var _decoration: Otsimo_CardDecoration? = nil
    var _providerScore: Int32 = 0
    var _providerWeight: Float = 0
    var _providerName: String = ""
    var _language: String = ""
    var _data: Otsimo_Card.OneOf_Data?
    var _title: String = ""
    var _subtitle: String = ""
    var _labels: Dictionary<String,String> = [:]

    init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _text = source._text
      _expiresAt = source._expiresAt
      _createdAt = source._createdAt
      _decoration = source._decoration
      _providerScore = source._providerScore
      _providerWeight = source._providerWeight
      _providerName = source._providerName
      _language = source._language
      _data = source._data
      _title = source._title
      _subtitle = source._subtitle
      _labels = source._labels
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  public var text: String {
    get {return _storage._text}
    set {_uniqueStorage()._text = newValue}
  }

  public var expiresAt: Int64 {
    get {return _storage._expiresAt}
    set {_uniqueStorage()._expiresAt = newValue}
  }

  public var createdAt: Int64 {
    get {return _storage._createdAt}
    set {_uniqueStorage()._createdAt = newValue}
  }

  public var decoration: Otsimo_CardDecoration {
    get {return _storage._decoration ?? Otsimo_CardDecoration()}
    set {_uniqueStorage()._decoration = newValue}
  }
  public var hasDecoration: Bool {
    return _storage._decoration != nil
  }
  public mutating func clearDecoration() {
    return _storage._decoration = nil
  }

  ///   Score is between 0-500
  public var providerScore: Int32 {
    get {return _storage._providerScore}
    set {_uniqueStorage()._providerScore = newValue}
  }

  ///   ProviderWeight is between 0-2
  public var providerWeight: Float {
    get {return _storage._providerWeight}
    set {_uniqueStorage()._providerWeight = newValue}
  }

  public var providerName: String {
    get {return _storage._providerName}
    set {_uniqueStorage()._providerName = newValue}
  }

  public var language: String {
    get {return _storage._language}
    set {_uniqueStorage()._language = newValue}
  }

  public var empty: Otsimo_CardEmpty {
    get {
      if case .empty(let v)? = _storage._data {
        return v
      }
      return Otsimo_CardEmpty()
    }
    set {
      _uniqueStorage()._data = .empty(newValue)
    }
  }

  public var webpage: Otsimo_CardWebpage {
    get {
      if case .webpage(let v)? = _storage._data {
        return v
      }
      return Otsimo_CardWebpage()
    }
    set {
      _uniqueStorage()._data = .webpage(newValue)
    }
  }

  public var applink: Otsimo_CardApplink {
    get {
      if case .applink(let v)? = _storage._data {
        return v
      }
      return Otsimo_CardApplink()
    }
    set {
      _uniqueStorage()._data = .applink(newValue)
    }
  }

  public var analysis: Otsimo_CardAnalysis {
    get {
      if case .analysis(let v)? = _storage._data {
        return v
      }
      return Otsimo_CardAnalysis()
    }
    set {
      _uniqueStorage()._data = .analysis(newValue)
    }
  }

  ///   Title for newer systems
  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  ///   Subtitle for newer systems 
  public var subtitle: String {
    get {return _storage._subtitle}
    set {_uniqueStorage()._subtitle = newValue}
  }

  ///   Labels of the card
  public var labels: Dictionary<String,String> {
    get {return _storage._labels}
    set {_uniqueStorage()._labels = newValue}
  }

  public var data: OneOf_Data? {
    get {return _storage._data}
    set {
      _uniqueStorage()._data = newValue
    }
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OneOf_Data: Equatable {
    case empty(Otsimo_CardEmpty)
    case webpage(Otsimo_CardWebpage)
    case applink(Otsimo_CardApplink)
    case analysis(Otsimo_CardAnalysis)

    public static func ==(lhs: Otsimo_Card.OneOf_Data, rhs: Otsimo_Card.OneOf_Data) -> Bool {
      switch (lhs, rhs) {
      case (.empty(let l), .empty(let r)): return l == r
      case (.webpage(let l), .webpage(let r)): return l == r
      case (.applink(let l), .applink(let r)): return l == r
      case (.analysis(let l), .analysis(let r)): return l == r
      default: return false
      }
    }

    fileprivate init?<T: SwiftProtobuf.Decoder>(byDecodingFrom decoder: inout T, fieldNumber: Int) throws {
      switch fieldNumber {
      case 10:
        var value: Otsimo_CardEmpty?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .empty(value)
          return
        }
      case 11:
        var value: Otsimo_CardWebpage?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .webpage(value)
          return
        }
      case 12:
        var value: Otsimo_CardApplink?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .applink(value)
          return
        }
      case 13:
        var value: Otsimo_CardAnalysis?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .analysis(value)
          return
        }
      default:
        break
      }
      return nil
    }

    fileprivate func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V, start: Int, end: Int) throws {
      switch self {
      case .empty(let v):
        if start <= 10 && 10 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
        }
      case .webpage(let v):
        if start <= 11 && 11 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
        }
      case .applink(let v):
        if start <= 12 && 12 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
        }
      case .analysis(let v):
        if start <= 13 && 13 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
        }
      }
    }
  }

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._id)
        case 2: try decoder.decodeSingularStringField(value: &_storage._text)
        case 3: try decoder.decodeSingularInt64Field(value: &_storage._expiresAt)
        case 4: try decoder.decodeSingularInt64Field(value: &_storage._createdAt)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._decoration)
        case 6: try decoder.decodeSingularInt32Field(value: &_storage._providerScore)
        case 7: try decoder.decodeSingularFloatField(value: &_storage._providerWeight)
        case 8: try decoder.decodeSingularStringField(value: &_storage._providerName)
        case 9: try decoder.decodeSingularStringField(value: &_storage._language)
        case 10...13:
          if _storage._data != nil {
            try decoder.handleConflictingOneOf()
          }
          _storage._data = try Otsimo_Card.OneOf_Data(byDecodingFrom: &decoder, fieldNumber: fieldNumber)
        case 14: try decoder.decodeSingularStringField(value: &_storage._title)
        case 15: try decoder.decodeSingularStringField(value: &_storage._subtitle)
        case 16: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._labels)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      if !_storage._text.isEmpty {
        try visitor.visitSingularStringField(value: _storage._text, fieldNumber: 2)
      }
      if _storage._expiresAt != 0 {
        try visitor.visitSingularInt64Field(value: _storage._expiresAt, fieldNumber: 3)
      }
      if _storage._createdAt != 0 {
        try visitor.visitSingularInt64Field(value: _storage._createdAt, fieldNumber: 4)
      }
      if let v = _storage._decoration {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if _storage._providerScore != 0 {
        try visitor.visitSingularInt32Field(value: _storage._providerScore, fieldNumber: 6)
      }
      if _storage._providerWeight != 0 {
        try visitor.visitSingularFloatField(value: _storage._providerWeight, fieldNumber: 7)
      }
      if !_storage._providerName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._providerName, fieldNumber: 8)
      }
      if !_storage._language.isEmpty {
        try visitor.visitSingularStringField(value: _storage._language, fieldNumber: 9)
      }
      try _storage._data?.traverse(visitor: &visitor, start: 10, end: 14)
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 14)
      }
      if !_storage._subtitle.isEmpty {
        try visitor.visitSingularStringField(value: _storage._subtitle, fieldNumber: 15)
      }
      if !_storage._labels.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._labels, fieldNumber: 16)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_Card) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._id != other_storage._id {return false}
        if _storage._text != other_storage._text {return false}
        if _storage._expiresAt != other_storage._expiresAt {return false}
        if _storage._createdAt != other_storage._createdAt {return false}
        if _storage._decoration != other_storage._decoration {return false}
        if _storage._providerScore != other_storage._providerScore {return false}
        if _storage._providerWeight != other_storage._providerWeight {return false}
        if _storage._providerName != other_storage._providerName {return false}
        if _storage._language != other_storage._language {return false}
        if _storage._data != other_storage._data {return false}
        if _storage._title != other_storage._title {return false}
        if _storage._subtitle != other_storage._subtitle {return false}
        if _storage._labels != other_storage._labels {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
