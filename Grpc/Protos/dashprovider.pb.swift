/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: dashprovider.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

fileprivate let _protobuf_package = "otsimo"

public struct Otsimo_ProviderGetRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProviderGetRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "request"),
    2: .standard(proto: "user_groups"),
  ]

  private class _StorageClass {
    var _request: Otsimo_DashboardGetRequest? = nil
    var _userGroups: [String] = []

    init() {}

    init(copying source: _StorageClass) {
      _request = source._request
      _userGroups = source._userGroups
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var request: Otsimo_DashboardGetRequest {
    get {return _storage._request ?? Otsimo_DashboardGetRequest()}
    set {_uniqueStorage()._request = newValue}
  }
  public var hasRequest: Bool {
    return _storage._request != nil
  }
  public mutating func clearRequest() {
    return _storage._request = nil
  }

  public var userGroups: [String] {
    get {return _storage._userGroups}
    set {_uniqueStorage()._userGroups = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._request)
        case 2: try decoder.decodeRepeatedStringField(value: &_storage._userGroups)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._request {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._userGroups.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._userGroups, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_ProviderGetRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._request != other_storage._request {return false}
        if _storage._userGroups != other_storage._userGroups {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_ProviderItem: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProviderItem"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "cacheable"),
    2: .same(proto: "ttl"),
    4: .same(proto: "item"),
  ]

  private class _StorageClass {
    var _cacheable: Bool = false
    var _ttl: Int64 = 0
    var _item: Otsimo_Card? = nil

    init() {}

    init(copying source: _StorageClass) {
      _cacheable = source._cacheable
      _ttl = source._ttl
      _item = source._item
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var cacheable: Bool {
    get {return _storage._cacheable}
    set {_uniqueStorage()._cacheable = newValue}
  }

  public var ttl: Int64 {
    get {return _storage._ttl}
    set {_uniqueStorage()._ttl = newValue}
  }

  public var item: Otsimo_Card {
    get {return _storage._item ?? Otsimo_Card()}
    set {_uniqueStorage()._item = newValue}
  }
  public var hasItem: Bool {
    return _storage._item != nil
  }
  public mutating func clearItem() {
    return _storage._item = nil
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._cacheable)
        case 2: try decoder.decodeSingularInt64Field(value: &_storage._ttl)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._item)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._cacheable != false {
        try visitor.visitSingularBoolField(value: _storage._cacheable, fieldNumber: 1)
      }
      if _storage._ttl != 0 {
        try visitor.visitSingularInt64Field(value: _storage._ttl, fieldNumber: 2)
      }
      if let v = _storage._item {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_ProviderItem) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._cacheable != other_storage._cacheable {return false}
        if _storage._ttl != other_storage._ttl {return false}
        if _storage._item != other_storage._item {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_ProviderItems: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProviderItems"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "profile_id"),
    2: .standard(proto: "child_id"),
    3: .standard(proto: "created_at"),
    4: .same(proto: "cacheable"),
    5: .same(proto: "ttl"),
    8: .same(proto: "items"),
  ]

  ///  ProfileId
  public var profileId: String = ""

  ///  ChildId
  public var childId: String = ""

  ///  CreatedAt
  public var createdAt: Int64 = 0

  ///  Cacheable
  public var cacheable: Bool = false

  ///  TTL is titme to live duration
  public var ttl: Int64 = 0

  ///  Items
  public var items: [Otsimo_ProviderItem] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &profileId)
      case 2: try decoder.decodeSingularStringField(value: &childId)
      case 3: try decoder.decodeSingularInt64Field(value: &createdAt)
      case 4: try decoder.decodeSingularBoolField(value: &cacheable)
      case 5: try decoder.decodeSingularInt64Field(value: &ttl)
      case 8: try decoder.decodeRepeatedMessageField(value: &items)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !profileId.isEmpty {
      try visitor.visitSingularStringField(value: profileId, fieldNumber: 1)
    }
    if !childId.isEmpty {
      try visitor.visitSingularStringField(value: childId, fieldNumber: 2)
    }
    if createdAt != 0 {
      try visitor.visitSingularInt64Field(value: createdAt, fieldNumber: 3)
    }
    if cacheable != false {
      try visitor.visitSingularBoolField(value: cacheable, fieldNumber: 4)
    }
    if ttl != 0 {
      try visitor.visitSingularInt64Field(value: ttl, fieldNumber: 5)
    }
    if !items.isEmpty {
      try visitor.visitRepeatedMessageField(value: items, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_ProviderItems) -> Bool {
    if profileId != other.profileId {return false}
    if childId != other.childId {return false}
    if createdAt != other.createdAt {return false}
    if cacheable != other.cacheable {return false}
    if ttl != other.ttl {return false}
    if items != other.items {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///  todo
public struct Otsimo_ProviderInfoRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProviderInfoRequest"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_ProviderInfoRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Otsimo_ProviderInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProviderInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "serves_for"),
  ]

  public var servesFor: [String] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedStringField(value: &servesFor)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !servesFor.isEmpty {
      try visitor.visitRepeatedStringField(value: servesFor, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Otsimo_ProviderInfo) -> Bool {
    if servesFor != other.servesFor {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
