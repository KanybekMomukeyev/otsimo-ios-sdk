/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: discovery.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

fileprivate let _protobuf_package = "apipb"

public struct Apipb_OtsimoServices: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".OtsimoServices"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "environment"),
    2: .same(proto: "issuer"),
    3: .standard(proto: "is_production"),
    4: .standard(proto: "use_tls"),
    5: .standard(proto: "registry_grpc"),
    6: .standard(proto: "listener_grpc"),
    7: .standard(proto: "watch_grpc"),
    8: .standard(proto: "catalog_grpc"),
    9: .standard(proto: "content_grpc"),
    10: .standard(proto: "dashboard_grpc"),
    11: .standard(proto: "api_grpc"),
    12: .standard(proto: "game_content"),
    13: .same(proto: "accounts"),
    14: .standard(proto: "analytics_grpc"),
    20: .same(proto: "services"),
    21: .standard(proto: "game_storage_providers"),
    22: .standard(proto: "self_learning_configs"),
    23: .same(proto: "configs"),
  ]

  private class _StorageClass {
    var _environment: String = ""
    var _issuer: String = ""
    var _isProduction: Bool = false
    var _useTls: Bool = false
    var _registryGrpc: String = ""
    var _listenerGrpc: String = ""
    var _watchGrpc: String = ""
    var _catalogGrpc: String = ""
    var _contentGrpc: String = ""
    var _dashboardGrpc: String = ""
    var _apiGrpc: String = ""
    var _gameContent: String = ""
    var _accounts: String = ""
    var _analyticsGrpc: String = ""
    var _services: Dictionary<String,String> = [:]
    var _gameStorageProviders: Dictionary<String,String> = [:]
    var _selfLearningConfigs: Dictionary<String,Apipb_SelfLearningConfig> = [:]
    var _configs: Dictionary<String,String> = [:]

    init() {}

    init(copying source: _StorageClass) {
      _environment = source._environment
      _issuer = source._issuer
      _isProduction = source._isProduction
      _useTls = source._useTls
      _registryGrpc = source._registryGrpc
      _listenerGrpc = source._listenerGrpc
      _watchGrpc = source._watchGrpc
      _catalogGrpc = source._catalogGrpc
      _contentGrpc = source._contentGrpc
      _dashboardGrpc = source._dashboardGrpc
      _apiGrpc = source._apiGrpc
      _gameContent = source._gameContent
      _accounts = source._accounts
      _analyticsGrpc = source._analyticsGrpc
      _services = source._services
      _gameStorageProviders = source._gameStorageProviders
      _selfLearningConfigs = source._selfLearningConfigs
      _configs = source._configs
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var environment: String {
    get {return _storage._environment}
    set {_uniqueStorage()._environment = newValue}
  }

  public var issuer: String {
    get {return _storage._issuer}
    set {_uniqueStorage()._issuer = newValue}
  }

  public var isProduction: Bool {
    get {return _storage._isProduction}
    set {_uniqueStorage()._isProduction = newValue}
  }

  public var useTls: Bool {
    get {return _storage._useTls}
    set {_uniqueStorage()._useTls = newValue}
  }

  public var registryGrpc: String {
    get {return _storage._registryGrpc}
    set {_uniqueStorage()._registryGrpc = newValue}
  }

  public var listenerGrpc: String {
    get {return _storage._listenerGrpc}
    set {_uniqueStorage()._listenerGrpc = newValue}
  }

  public var watchGrpc: String {
    get {return _storage._watchGrpc}
    set {_uniqueStorage()._watchGrpc = newValue}
  }

  public var catalogGrpc: String {
    get {return _storage._catalogGrpc}
    set {_uniqueStorage()._catalogGrpc = newValue}
  }

  public var contentGrpc: String {
    get {return _storage._contentGrpc}
    set {_uniqueStorage()._contentGrpc = newValue}
  }

  public var dashboardGrpc: String {
    get {return _storage._dashboardGrpc}
    set {_uniqueStorage()._dashboardGrpc = newValue}
  }

  public var apiGrpc: String {
    get {return _storage._apiGrpc}
    set {_uniqueStorage()._apiGrpc = newValue}
  }

  ///  GameContent is registry service http url
  public var gameContent: String {
    get {return _storage._gameContent}
    set {_uniqueStorage()._gameContent = newValue}
  }

  public var accounts: String {
    get {return _storage._accounts}
    set {_uniqueStorage()._accounts = newValue}
  }

  public var analyticsGrpc: String {
    get {return _storage._analyticsGrpc}
    set {_uniqueStorage()._analyticsGrpc = newValue}
  }

  public var services: Dictionary<String,String> {
    get {return _storage._services}
    set {_uniqueStorage()._services = newValue}
  }

  public var gameStorageProviders: Dictionary<String,String> {
    get {return _storage._gameStorageProviders}
    set {_uniqueStorage()._gameStorageProviders = newValue}
  }

  public var selfLearningConfigs: Dictionary<String,Apipb_SelfLearningConfig> {
    get {return _storage._selfLearningConfigs}
    set {_uniqueStorage()._selfLearningConfigs = newValue}
  }

  public var configs: Dictionary<String,String> {
    get {return _storage._configs}
    set {_uniqueStorage()._configs = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._environment)
        case 2: try decoder.decodeSingularStringField(value: &_storage._issuer)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._isProduction)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._useTls)
        case 5: try decoder.decodeSingularStringField(value: &_storage._registryGrpc)
        case 6: try decoder.decodeSingularStringField(value: &_storage._listenerGrpc)
        case 7: try decoder.decodeSingularStringField(value: &_storage._watchGrpc)
        case 8: try decoder.decodeSingularStringField(value: &_storage._catalogGrpc)
        case 9: try decoder.decodeSingularStringField(value: &_storage._contentGrpc)
        case 10: try decoder.decodeSingularStringField(value: &_storage._dashboardGrpc)
        case 11: try decoder.decodeSingularStringField(value: &_storage._apiGrpc)
        case 12: try decoder.decodeSingularStringField(value: &_storage._gameContent)
        case 13: try decoder.decodeSingularStringField(value: &_storage._accounts)
        case 14: try decoder.decodeSingularStringField(value: &_storage._analyticsGrpc)
        case 20: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._services)
        case 21: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._gameStorageProviders)
        case 22: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Apipb_SelfLearningConfig>.self, value: &_storage._selfLearningConfigs)
        case 23: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._configs)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._environment.isEmpty {
        try visitor.visitSingularStringField(value: _storage._environment, fieldNumber: 1)
      }
      if !_storage._issuer.isEmpty {
        try visitor.visitSingularStringField(value: _storage._issuer, fieldNumber: 2)
      }
      if _storage._isProduction != false {
        try visitor.visitSingularBoolField(value: _storage._isProduction, fieldNumber: 3)
      }
      if _storage._useTls != false {
        try visitor.visitSingularBoolField(value: _storage._useTls, fieldNumber: 4)
      }
      if !_storage._registryGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._registryGrpc, fieldNumber: 5)
      }
      if !_storage._listenerGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._listenerGrpc, fieldNumber: 6)
      }
      if !_storage._watchGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._watchGrpc, fieldNumber: 7)
      }
      if !_storage._catalogGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._catalogGrpc, fieldNumber: 8)
      }
      if !_storage._contentGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._contentGrpc, fieldNumber: 9)
      }
      if !_storage._dashboardGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._dashboardGrpc, fieldNumber: 10)
      }
      if !_storage._apiGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._apiGrpc, fieldNumber: 11)
      }
      if !_storage._gameContent.isEmpty {
        try visitor.visitSingularStringField(value: _storage._gameContent, fieldNumber: 12)
      }
      if !_storage._accounts.isEmpty {
        try visitor.visitSingularStringField(value: _storage._accounts, fieldNumber: 13)
      }
      if !_storage._analyticsGrpc.isEmpty {
        try visitor.visitSingularStringField(value: _storage._analyticsGrpc, fieldNumber: 14)
      }
      if !_storage._services.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._services, fieldNumber: 20)
      }
      if !_storage._gameStorageProviders.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._gameStorageProviders, fieldNumber: 21)
      }
      if !_storage._selfLearningConfigs.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Apipb_SelfLearningConfig>.self, value: _storage._selfLearningConfigs, fieldNumber: 22)
      }
      if !_storage._configs.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._configs, fieldNumber: 23)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Apipb_OtsimoServices) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._environment != other_storage._environment {return false}
        if _storage._issuer != other_storage._issuer {return false}
        if _storage._isProduction != other_storage._isProduction {return false}
        if _storage._useTls != other_storage._useTls {return false}
        if _storage._registryGrpc != other_storage._registryGrpc {return false}
        if _storage._listenerGrpc != other_storage._listenerGrpc {return false}
        if _storage._watchGrpc != other_storage._watchGrpc {return false}
        if _storage._catalogGrpc != other_storage._catalogGrpc {return false}
        if _storage._contentGrpc != other_storage._contentGrpc {return false}
        if _storage._dashboardGrpc != other_storage._dashboardGrpc {return false}
        if _storage._apiGrpc != other_storage._apiGrpc {return false}
        if _storage._gameContent != other_storage._gameContent {return false}
        if _storage._accounts != other_storage._accounts {return false}
        if _storage._analyticsGrpc != other_storage._analyticsGrpc {return false}
        if _storage._services != other_storage._services {return false}
        if _storage._gameStorageProviders != other_storage._gameStorageProviders {return false}
        if _storage._selfLearningConfigs != other_storage._selfLearningConfigs {return false}
        if _storage._configs != other_storage._configs {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Apipb_DiscoveryRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DiscoveryRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "environment"),
    2: .standard(proto: "sdk_version"),
    3: .standard(proto: "os_name"),
    4: .standard(proto: "country_code"),
    5: .standard(proto: "app_bundle_id"),
    6: .standard(proto: "app_bundle_version"),
  ]

  public var environment: String = ""

  public var sdkVersion: String = ""

  public var osName: String = ""

  public var countryCode: String = ""

  public var appBundleId: String = ""

  public var appBundleVersion: String = ""

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &environment)
      case 2: try decoder.decodeSingularStringField(value: &sdkVersion)
      case 3: try decoder.decodeSingularStringField(value: &osName)
      case 4: try decoder.decodeSingularStringField(value: &countryCode)
      case 5: try decoder.decodeSingularStringField(value: &appBundleId)
      case 6: try decoder.decodeSingularStringField(value: &appBundleVersion)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !environment.isEmpty {
      try visitor.visitSingularStringField(value: environment, fieldNumber: 1)
    }
    if !sdkVersion.isEmpty {
      try visitor.visitSingularStringField(value: sdkVersion, fieldNumber: 2)
    }
    if !osName.isEmpty {
      try visitor.visitSingularStringField(value: osName, fieldNumber: 3)
    }
    if !countryCode.isEmpty {
      try visitor.visitSingularStringField(value: countryCode, fieldNumber: 4)
    }
    if !appBundleId.isEmpty {
      try visitor.visitSingularStringField(value: appBundleId, fieldNumber: 5)
    }
    if !appBundleVersion.isEmpty {
      try visitor.visitSingularStringField(value: appBundleVersion, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Apipb_DiscoveryRequest) -> Bool {
    if environment != other.environment {return false}
    if sdkVersion != other.sdkVersion {return false}
    if osName != other.osName {return false}
    if countryCode != other.countryCode {return false}
    if appBundleId != other.appBundleId {return false}
    if appBundleVersion != other.appBundleVersion {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Apipb_SelfLearningSegment: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SelfLearningSegment"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "title"),
    2: .standard(proto: "base_query"),
  ]

  private class _StorageClass {
    var _title: String = ""
    var _baseQuery: Apipb_ContentListRequest? = nil

    init() {}

    init(copying source: _StorageClass) {
      _title = source._title
      _baseQuery = source._baseQuery
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var baseQuery: Apipb_ContentListRequest {
    get {return _storage._baseQuery ?? Apipb_ContentListRequest()}
    set {_uniqueStorage()._baseQuery = newValue}
  }
  public var hasBaseQuery: Bool {
    return _storage._baseQuery != nil
  }
  public mutating func clearBaseQuery() {
    return _storage._baseQuery = nil
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._title)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._baseQuery)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 1)
      }
      if let v = _storage._baseQuery {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Apipb_SelfLearningSegment) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._title != other_storage._title {return false}
        if _storage._baseQuery != other_storage._baseQuery {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Apipb_SelfLearningConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SelfLearningConfig"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "language"),
    2: .same(proto: "segments"),
  ]

  public var language: String = ""

  public var segments: [Apipb_SelfLearningSegment] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &language)
      case 2: try decoder.decodeRepeatedMessageField(value: &segments)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !language.isEmpty {
      try visitor.visitSingularStringField(value: language, fieldNumber: 1)
    }
    if !segments.isEmpty {
      try visitor.visitRepeatedMessageField(value: segments, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Apipb_SelfLearningConfig) -> Bool {
    if language != other.language {return false}
    if segments != other.segments {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
