/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: file.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct Otsimo_FileMetadata: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_FileMetadata"}
  public var protoMessageName: String {return "FileMetadata"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "name", swift: "name"),
    2: .same(proto: "labels", swift: "labels"),
    3: .unique(proto: "content_type", json: "contentType", swift: "contentType"),
    4: .unique(proto: "content_encoding", json: "contentEncoding", swift: "contentEncoding"),
  ]


  public var name: String = ""

  public var labels: Dictionary<String,String> = [:]

  public var contentType: String = ""

  public var contentEncoding: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &name)
    case 2: try setter.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &labels)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &contentType)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &contentEncoding)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: name, fieldNumber: 1)
    }
    if !labels.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: labels, fieldNumber: 2)
    }
    if contentType != "" {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: contentType, fieldNumber: 3)
    }
    if contentEncoding != "" {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: contentEncoding, fieldNumber: 4)
    }
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_FileMetadata) -> Bool {
    if name != other.name {return false}
    if labels != other.labels {return false}
    if contentType != other.contentType {return false}
    if contentEncoding != other.contentEncoding {return false}
    return true
  }
}

public struct Otsimo_UploadReq: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_UploadReq"}
  public var protoMessageName: String {return "UploadReq"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "metadata", swift: "metadata"),
    2: .same(proto: "data", swift: "data"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = Otsimo_UploadReq
    var _metadata: Otsimo_FileMetadata? = nil
    var _data: Data = Data()

    init() {}

    func decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
      switch protoFieldNumber {
      case 1: try setter.decodeSingularMessageField(fieldType: Otsimo_FileMetadata.self, value: &_metadata)
      case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: &_data)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _metadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _data != Data() {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: _data, fieldNumber: 2)
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _metadata != other._metadata {return false}
      if _data != other._data {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._metadata = _metadata
      clone._data = _data
      return clone
    }
  }

  private var _storage = _StorageClass()


  public var metadata: Otsimo_FileMetadata {
    get {return _storage._metadata ?? Otsimo_FileMetadata()}
    set {_uniqueStorage()._metadata = newValue}
  }
  public var hasMetadata: Bool {
    return _storage._metadata != nil
  }
  public mutating func clearMetadata() {
    return _storage._metadata = nil
  }

  public var data: Data {
    get {return _storage._data}
    set {_uniqueStorage()._data = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_UploadReq) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Otsimo_UploadRes: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_UploadRes"}
  public var protoMessageName: String {return "UploadRes"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "upload_token", json: "uploadToken", swift: "uploadToken"),
  ]


  public var uploadToken: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &uploadToken)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if uploadToken != "" {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: uploadToken, fieldNumber: 1)
    }
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_UploadRes) -> Bool {
    if uploadToken != other.uploadToken {return false}
    return true
  }
}

public struct Otsimo_StoreReq: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_StoreReq"}
  public var protoMessageName: String {return "StoreReq"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "metadata", swift: "metadata"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = Otsimo_StoreReq
    var _metadata: Otsimo_FileMetadata? = nil

    init() {}

    func decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
      switch protoFieldNumber {
      case 1: try setter.decodeSingularMessageField(fieldType: Otsimo_FileMetadata.self, value: &_metadata)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _metadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _metadata != other._metadata {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._metadata = _metadata
      return clone
    }
  }

  private var _storage = _StorageClass()


  public var metadata: Otsimo_FileMetadata {
    get {return _storage._metadata ?? Otsimo_FileMetadata()}
    set {_uniqueStorage()._metadata = newValue}
  }
  public var hasMetadata: Bool {
    return _storage._metadata != nil
  }
  public mutating func clearMetadata() {
    return _storage._metadata = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_StoreReq) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Otsimo_StoreRes: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_StoreRes"}
  public var protoMessageName: String {return "StoreRes"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames = FieldNameMap()


  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_StoreRes) -> Bool {
    return true
  }
}

public struct Otsimo_LookupReq: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_LookupReq"}
  public var protoMessageName: String {return "LookupReq"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "selector", swift: "selector"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = Otsimo_LookupReq
    var _selector: Apipb_LabelSelector? = nil

    init() {}

    func decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
      switch protoFieldNumber {
      case 1: try setter.decodeSingularMessageField(fieldType: Apipb_LabelSelector.self, value: &_selector)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _selector {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _selector != other._selector {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._selector = _selector
      return clone
    }
  }

  private var _storage = _StorageClass()


  public var selector: Apipb_LabelSelector {
    get {return _storage._selector ?? Apipb_LabelSelector()}
    set {_uniqueStorage()._selector = newValue}
  }
  public var hasSelector: Bool {
    return _storage._selector != nil
  }
  public mutating func clearSelector() {
    return _storage._selector = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_LookupReq) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Otsimo_LookupRes: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Otsimo_LookupRes"}
  public var protoMessageName: String {return "LookupRes"}
  public var protoPackageName: String {return "otsimo"}
  public static let _protobuf_fieldNames = FieldNameMap()


  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
  }

  public func _protoc_generated_isEqualTo(other: Otsimo_LookupRes) -> Bool {
    return true
  }
}
