// Code generated by protoc-gen-grpc-swift
// DO NOT EDIT!
import SwiftProtobuf
import GRPCClient


public class SimplifiedAnalytics: GrpcProtoService {

    public convenience init(host: String) {
        self.init(host: host, packageName: "apipb", serviceName: "SimplifiedAnalytics")
    }

    public func gamePlayingDuration(_ request: Apipb_GamePlayingRequest,
                           handler: @escaping (Apipb_GamePlayingReply?, Error?) -> Void) -> GrpcProtoCall<Apipb_GamePlayingReply> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_GamePlayingReply, error)
        }
        return RPC(method: "GamePlayingDuration",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_GamePlayingReply.self,
                   responsesWriteable: writable!)
    }
	
    public func gameSuccessFailure(_ request: Apipb_GamePlayingRequest,
                           handler: @escaping (Apipb_GamePlayingReply?, Error?) -> Void) -> GrpcProtoCall<Apipb_GamePlayingReply> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_GamePlayingReply, error)
        }
        return RPC(method: "GameSuccessFailure",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_GamePlayingReply.self,
                   responsesWriteable: writable!)
    }
	
}