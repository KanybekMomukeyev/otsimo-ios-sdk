// Code generated by protoc-gen-grpc-swift
// DO NOT EDIT!
import SwiftProtobuf
import GRPCClient


public class AnalysisService: GrpcProtoService {

    public convenience init(host: String) {
        self.init(host: host, packageName: "apipb", serviceName: "AnalysisService")
    }

    public func activeOnRange(_ request: Apipb_ActiveOnRangeRequest,
                           handler: @escaping (Bool, Apipb_ChildAndProfileIds?, Error?) -> Void) -> GrpcProtoCall<Apipb_ChildAndProfileIds> {
        
        let writable = GRXWriteable { (done, value, error) in
            handler(done, value as? Apipb_ChildAndProfileIds, error)
        }

        return RPC(method: "ActiveOnRange",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_ChildAndProfileIds.self,
                   responsesWriteable: writable!)
    }
	
    public func inactive(_ request: Apipb_InactiveUsersRequest,
                           handler: @escaping (Bool, Apipb_ChildAndProfileIds?, Error?) -> Void) -> GrpcProtoCall<Apipb_ChildAndProfileIds> {
        
        let writable = GRXWriteable { (done, value, error) in
            handler(done, value as? Apipb_ChildAndProfileIds, error)
        }

        return RPC(method: "Inactive",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_ChildAndProfileIds.self,
                   responsesWriteable: writable!)
    }
	
    public func active(_ request: Apipb_GetActiveUsersRequest,
                           handler: @escaping (Bool, Apipb_ChildAndProfileIds?, Error?) -> Void) -> GrpcProtoCall<Apipb_ChildAndProfileIds> {
        
        let writable = GRXWriteable { (done, value, error) in
            handler(done, value as? Apipb_ChildAndProfileIds, error)
        }

        return RPC(method: "Active",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_ChildAndProfileIds.self,
                   responsesWriteable: writable!)
    }
	
    public func playedGames(_ request: Apipb_ChildAndTimeRange,
                           handler: @escaping (Apipb_PlayedGamesList?, Error?) -> Void) -> GrpcProtoCall<Apipb_PlayedGamesList> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_PlayedGamesList, error)
        }
        return RPC(method: "PlayedGames",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_PlayedGamesList.self,
                   responsesWriteable: writable!)
    }
	
    public func analyze(_ request: Apipb_AnalyzeRequest,
                           handler: @escaping (Apipb_AnalyzeResult?, Error?) -> Void) -> GrpcProtoCall<Apipb_AnalyzeResult> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_AnalyzeResult, error)
        }
        return RPC(method: "Analyze",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_AnalyzeResult.self,
                   responsesWriteable: writable!)
    }
	
    public func activeUsers(_ request: Apipb_ActiveUsersRequest,
                           handler: @escaping (Apipb_ActiveUsersResult?, Error?) -> Void) -> GrpcProtoCall<Apipb_ActiveUsersResult> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_ActiveUsersResult, error)
        }
        return RPC(method: "ActiveUsers",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_ActiveUsersResult.self,
                   responsesWriteable: writable!)
    }
	
    public func retention(_ request: Apipb_RetentionRequest,
                           handler: @escaping (Apipb_RetentionResult?, Error?) -> Void) -> GrpcProtoCall<Apipb_RetentionResult> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_RetentionResult, error)
        }
        return RPC(method: "Retention",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_RetentionResult.self,
                   responsesWriteable: writable!)
    }
	
    public func gameInfo(_ request: Apipb_GameWithVersions,
                           handler: @escaping (Apipb_GameInfoResponse?, Error?) -> Void) -> GrpcProtoCall<Apipb_GameInfoResponse> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_GameInfoResponse, error)
        }
        return RPC(method: "GameInfo",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_GameInfoResponse.self,
                   responsesWriteable: writable!)
    }
	
    public func appDataInfo(_ request: Apipb_AppDataInfoReq,
                           handler: @escaping (Apipb_GameInfoResponse?, Error?) -> Void) -> GrpcProtoCall<Apipb_GameInfoResponse> {
        let writable = GRXWriteable { (value, error) in
            handler(value as? Apipb_GameInfoResponse, error)
        }
        return RPC(method: "AppDataInfo",
                   requestsWriter: GRXWriter(value: request),
                   response: Apipb_GameInfoResponse.self,
                   responsesWriteable: writable!)
    }
	
}